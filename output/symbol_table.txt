TOKEN:  Declaration statement | TYPE: COMMENT                        | LINE: 1
TOKEN: INTEGER              | TYPE: TYPE_INTEGER                   | LINE: 2
TOKEN: count                | TYPE: IDENTIFIER                     | LINE: 2
TOKEN: ;                    | TYPE: SEMICOLON                      | LINE: 2
TOKEN: FLOAT                | TYPE: TYPE_FLOAT                     | LINE: 3
TOKEN: x                    | TYPE: IDENTIFIER                     | LINE: 3
TOKEN: ,                    | TYPE: COMMA                          | LINE: 3
TOKEN: y                    | TYPE: IDENTIFIER                     | LINE: 3
TOKEN: ,                    | TYPE: COMMA                          | LINE: 3
TOKEN: z                    | TYPE: IDENTIFIER                     | LINE: 3
TOKEN: ;                    | TYPE: SEMICOLON                      | LINE: 3
TOKEN: STRING               | TYPE: TYPE_STRING                    | LINE: 4
TOKEN: message              | TYPE: IDENTIFIER                     | LINE: 4
TOKEN: =                    | TYPE: ASSIGN_OP                      | LINE: 4
TOKEN: John                 | TYPE: STR_CONST                      | LINE: 4
TOKEN: ;                    | TYPE: SEMICOLON                      | LINE: 4
TOKEN: INTEGER              | TYPE: TYPE_INTEGER                   | LINE: 5
TOKEN: numbers              | TYPE: IDENTIFIER                     | LINE: 5
TOKEN: [                    | TYPE: LEFT_BRACKET                   | LINE: 5
TOKEN: 10                   | TYPE: NUM_CONST                      | LINE: 5
TOKEN: ]                    | TYPE: RIGHT_BRACKET                  | LINE: 5
TOKEN: ;                    | TYPE: SEMICOLON                      | LINE: 5
TOKEN:  Function Definition | TYPE: COMMENT                        | LINE: 7
TOKEN: INTEGER              | TYPE: TYPE_INTEGER                   | LINE: 8
TOKEN: sum                  | TYPE: IDENTIFIER                     | LINE: 8
TOKEN: (                    | TYPE: LEFT_PAREN                     | LINE: 8
TOKEN: INTEGER              | TYPE: TYPE_INTEGER                   | LINE: 8
TOKEN: a                    | TYPE: IDENTIFIER                     | LINE: 8
TOKEN: ,                    | TYPE: COMMA                          | LINE: 8
TOKEN: INTEGER              | TYPE: TYPE_INTEGER                   | LINE: 8
TOKEN: b                    | TYPE: IDENTIFIER                     | LINE: 8
TOKEN: )                    | TYPE: RIGHT_PAREN                    | LINE: 8
TOKEN: {                    | TYPE: LEFT_CURLY                     | LINE: 8
TOKEN: CHARACTER            | TYPE: TYPE_CHARACTER                 | LINE: 9
TOKEN: a                    | TYPE: IDENTIFIER                     | LINE: 9
TOKEN: =                    | TYPE: ASSIGN_OP                      | LINE: 9
TOKEN: a                    | TYPE: CHAR_CONST                     | LINE: 9
TOKEN: ;                    | TYPE: SEMICOLON                      | LINE: 9
TOKEN: }                    | TYPE: RIGHT_CURLY                    | LINE: 10
TOKEN: INTEGER              | TYPE: TYPE_INTEGER                   | LINE: 12
TOKEN: MAIN                 | TYPE: KW_MAIN                        | LINE: 12
TOKEN: (                    | TYPE: LEFT_PAREN                     | LINE: 12
TOKEN: VOID                 | TYPE: RW_VOID                        | LINE: 12
TOKEN: )                    | TYPE: RIGHT_PAREN                    | LINE: 12
TOKEN: {                    | TYPE: LEFT_CURLY                     | LINE: 12
TOKEN:  Input Statement    | TYPE: COMMENT                        | LINE: 13
TOKEN: age                  | TYPE: IDENTIFIER                     | LINE: 14
TOKEN: =                    | TYPE: ASSIGN_OP                      | LINE: 14
TOKEN: INPUT                | TYPE: KW_INPUT                       | LINE: 14
TOKEN: (                    | TYPE: LEFT_PAREN                     | LINE: 14
TOKEN: What is your age?    | TYPE: STR_CONST                      | LINE: 14
TOKEN: ,                    | TYPE: COMMA                          | LINE: 14
TOKEN: INTEGER              | TYPE: TYPE_INTEGER                   | LINE: 14
TOKEN: )                    | TYPE: RIGHT_PAREN                    | LINE: 14
TOKEN: ;                    | TYPE: SEMICOLON                      | LINE: 14
TOKEN:  Output Statements  | TYPE: COMMENT                        | LINE: 16
TOKEN: DISPLAY              | TYPE: KW_DISPLAY                     | LINE: 17
TOKEN: (                    | TYPE: LEFT_PAREN                     | LINE: 17
TOKEN: Hello                | TYPE: STR_CONST                      | LINE: 17
TOKEN: )                    | TYPE: RIGHT_PAREN                    | LINE: 17
TOKEN: ;                    | TYPE: SEMICOLON                      | LINE: 17
TOKEN: DISPLAY              | TYPE: KW_DISPLAY                     | LINE: 18
TOKEN: (                    | TYPE: LEFT_PAREN                     | LINE: 18
TOKEN: %s                   | TYPE: STR_WITH_FORMAT                | LINE: 18
TOKEN: ,                    | TYPE: COMMA                          | LINE: 18
TOKEN: message              | TYPE: IDENTIFIER                     | LINE: 18
TOKEN: )                    | TYPE: RIGHT_PAREN                    | LINE: 18
TOKEN: ;                    | TYPE: SEMICOLON                      | LINE: 18
TOKEN: DISPLAY              | TYPE: KW_DISPLAY                     | LINE: 19
TOKEN: (                    | TYPE: LEFT_PAREN                     | LINE: 19
TOKEN: message: %s age: %d  | TYPE: STR_WITH_FORMAT                | LINE: 19
TOKEN: ,                    | TYPE: COMMA                          | LINE: 19
TOKEN: message              | TYPE: IDENTIFIER                     | LINE: 19
TOKEN: ,                    | TYPE: COMMA                          | LINE: 19
TOKEN: age                  | TYPE: IDENTIFIER                     | LINE: 19
TOKEN: )                    | TYPE: RIGHT_PAREN                    | LINE: 19
TOKEN: ;                    | TYPE: SEMICOLON                      | LINE: 19
TOKEN:  Assignment Statements | TYPE: COMMENT                        | LINE: 21
TOKEN: age                  | TYPE: IDENTIFIER                     | LINE: 22
TOKEN: =                    | TYPE: ASSIGN_OP                      | LINE: 22
TOKEN: 13                   | TYPE: NUM_CONST                      | LINE: 22
TOKEN: ;                    | TYPE: SEMICOLON                      | LINE: 22
TOKEN: num                  | TYPE: IDENTIFIER                     | LINE: 23
TOKEN: =                    | TYPE: ASSIGN_OP                      | LINE: 23
TOKEN: 13                   | TYPE: NUM_CONST                      | LINE: 23
TOKEN: +                    | TYPE: ADD_OP                         | LINE: 23
TOKEN: 29                   | TYPE: NUM_CONST                      | LINE: 23
TOKEN: -                    | TYPE: SUB_OP                         | LINE: 23
TOKEN: 3                    | TYPE: NUM_CONST                      | LINE: 23
TOKEN: *                    | TYPE: MUL_OP                         | LINE: 23
TOKEN: 9                    | TYPE: NUM_CONST                      | LINE: 23
TOKEN: ;                    | TYPE: SEMICOLON                      | LINE: 23
TOKEN: isTrue               | TYPE: IDENTIFIER                     | LINE: 24
TOKEN: =                    | TYPE: ASSIGN_OP                      | LINE: 24
TOKEN: 13                   | TYPE: NUM_CONST                      | LINE: 24
TOKEN: ==                   | TYPE: REL_EQ                         | LINE: 24
TOKEN: 21                   | TYPE: NUM_CONST                      | LINE: 24
TOKEN: +                    | TYPE: ADD_OP                         | LINE: 24
TOKEN: x                    | TYPE: IDENTIFIER                     | LINE: 24
TOKEN: ;                    | TYPE: SEMICOLON                      | LINE: 24
TOKEN: x                    | TYPE: IDENTIFIER                     | LINE: 25
TOKEN: =                    | TYPE: ASSIGN_OP                      | LINE: 25
TOKEN: 5                    | TYPE: NUM_CONST                      | LINE: 25
TOKEN: ;                    | TYPE: SEMICOLON                      | LINE: 25
TOKEN: y                    | TYPE: IDENTIFIER                     | LINE: 26
TOKEN: =                    | TYPE: ASSIGN_OP                      | LINE: 26
TOKEN: x                    | TYPE: IDENTIFIER                     | LINE: 26
TOKEN: ;                    | TYPE: SEMICOLON                      | LINE: 26
TOKEN: z                    | TYPE: IDENTIFIER                     | LINE: 27
TOKEN: =                    | TYPE: ASSIGN_OP                      | LINE: 27
TOKEN: (                    | TYPE: LEFT_PAREN                     | LINE: 27
TOKEN: x                    | TYPE: IDENTIFIER                     | LINE: 27
TOKEN: +                    | TYPE: ADD_OP                         | LINE: 27
TOKEN: y                    | TYPE: IDENTIFIER                     | LINE: 27
TOKEN: ==                   | TYPE: REL_EQ                         | LINE: 27
TOKEN: 10                   | TYPE: NUM_CONST                      | LINE: 27
TOKEN: )                    | TYPE: RIGHT_PAREN                    | LINE: 27
TOKEN: ;                    | TYPE: SEMICOLON                      | LINE: 27
TOKEN: x                    | TYPE: IDENTIFIER                     | LINE: 28
TOKEN: +=                   | TYPE: ADD_ASSIGN                     | LINE: 28
TOKEN: 2                    | TYPE: NUM_CONST                      | LINE: 28
TOKEN: ;                    | TYPE: SEMICOLON                      | LINE: 28
TOKEN: x                    | TYPE: IDENTIFIER                     | LINE: 29
TOKEN: ++                   | TYPE: UNARY_INC                      | LINE: 29
TOKEN: ;                    | TYPE: SEMICOLON                      | LINE: 29
TOKEN:  Conditional Statements | TYPE: COMMENT                        | LINE: 31
TOKEN: IF                   | TYPE: KW_IF                          | LINE: 32
TOKEN: (                    | TYPE: LEFT_PAREN                     | LINE: 32
TOKEN: x                    | TYPE: IDENTIFIER                     | LINE: 32
TOKEN: >                    | TYPE: REL_GT                         | LINE: 32
TOKEN: 0                    | TYPE: NUM_CONST                      | LINE: 32
TOKEN: )                    | TYPE: RIGHT_PAREN                    | LINE: 32
TOKEN: {                    | TYPE: LEFT_CURLY                     | LINE: 32
TOKEN: IF                   | TYPE: KW_IF                          | LINE: 33
TOKEN: (                    | TYPE: LEFT_PAREN                     | LINE: 33
TOKEN: x                    | TYPE: IDENTIFIER                     | LINE: 33
TOKEN: >                    | TYPE: REL_GT                         | LINE: 33
TOKEN: 0                    | TYPE: NUM_CONST                      | LINE: 33
TOKEN: )                    | TYPE: RIGHT_PAREN                    | LINE: 33
TOKEN: {                    | TYPE: LEFT_CURLY                     | LINE: 33
TOKEN: DISPLAY              | TYPE: KW_DISPLAY                     | LINE: 34
TOKEN: (                    | TYPE: LEFT_PAREN                     | LINE: 34
TOKEN: Positive number      | TYPE: STR_CONST                      | LINE: 34
TOKEN: )                    | TYPE: RIGHT_PAREN                    | LINE: 34
TOKEN: ;                    | TYPE: SEMICOLON                      | LINE: 34
TOKEN: }                    | TYPE: RIGHT_CURLY                    | LINE: 35
TOKEN: ELSE                 | TYPE: KW_ELSE                        | LINE: 35
TOKEN: {                    | TYPE: LEFT_CURLY                     | LINE: 35
TOKEN: DISPLAY              | TYPE: KW_DISPLAY                     | LINE: 36
TOKEN: (                    | TYPE: LEFT_PAREN                     | LINE: 36
TOKEN: Something            | TYPE: STR_CONST                      | LINE: 36
TOKEN: )                    | TYPE: RIGHT_PAREN                    | LINE: 36
TOKEN: ;                    | TYPE: SEMICOLON                      | LINE: 36
TOKEN: }                    | TYPE: RIGHT_CURLY                    | LINE: 37
TOKEN: }                    | TYPE: RIGHT_CURLY                    | LINE: 39
TOKEN: ELSE                 | TYPE: KW_ELSE                        | LINE: 39
TOKEN: IF                   | TYPE: KW_IF                          | LINE: 39
TOKEN: (                    | TYPE: LEFT_PAREN                     | LINE: 39
TOKEN: x                    | TYPE: IDENTIFIER                     | LINE: 39
TOKEN: <                    | TYPE: REL_LT                         | LINE: 39
TOKEN: 0                    | TYPE: NUM_CONST                      | LINE: 39
TOKEN: )                    | TYPE: RIGHT_PAREN                    | LINE: 39
TOKEN: {                    | TYPE: LEFT_CURLY                     | LINE: 39
TOKEN: DISPLAY              | TYPE: KW_DISPLAY                     | LINE: 40
TOKEN: (                    | TYPE: LEFT_PAREN                     | LINE: 40
TOKEN: Negative number      | TYPE: STR_CONST                      | LINE: 40
TOKEN: )                    | TYPE: RIGHT_PAREN                    | LINE: 40
TOKEN: ;                    | TYPE: SEMICOLON                      | LINE: 40
TOKEN: }                    | TYPE: RIGHT_CURLY                    | LINE: 41
TOKEN: ELSE                 | TYPE: KW_ELSE                        | LINE: 41
TOKEN: IF                   | TYPE: KW_IF                          | LINE: 41
TOKEN: (                    | TYPE: LEFT_PAREN                     | LINE: 41
TOKEN: x                    | TYPE: IDENTIFIER                     | LINE: 41
TOKEN: ==                   | TYPE: REL_EQ                         | LINE: 41
TOKEN: 0                    | TYPE: NUM_CONST                      | LINE: 41
TOKEN: )                    | TYPE: RIGHT_PAREN                    | LINE: 41
TOKEN: {                    | TYPE: LEFT_CURLY                     | LINE: 41
TOKEN: DISPLAY              | TYPE: KW_DISPLAY                     | LINE: 42
TOKEN: (                    | TYPE: LEFT_PAREN                     | LINE: 42
TOKEN: Zero                 | TYPE: STR_CONST                      | LINE: 42
TOKEN: )                    | TYPE: RIGHT_PAREN                    | LINE: 42
TOKEN: ;                    | TYPE: SEMICOLON                      | LINE: 42
TOKEN: }                    | TYPE: RIGHT_CURLY                    | LINE: 43
TOKEN: ELSE                 | TYPE: KW_ELSE                        | LINE: 43
TOKEN: {                    | TYPE: LEFT_CURLY                     | LINE: 43
TOKEN: DISPLAY              | TYPE: KW_DISPLAY                     | LINE: 44
TOKEN: (                    | TYPE: LEFT_PAREN                     | LINE: 44
TOKEN: Any:                 | TYPE: STR_CONST                      | LINE: 44
TOKEN: )                    | TYPE: RIGHT_PAREN                    | LINE: 44
TOKEN: ;                    | TYPE: SEMICOLON                      | LINE: 44
TOKEN: }                    | TYPE: RIGHT_CURLY                    | LINE: 45
TOKEN:  Iterative Statements | TYPE: COMMENT                        | LINE: 48
TOKEN: FOR                  | TYPE: KW_FOR                         | LINE: 49
TOKEN: (                    | TYPE: LEFT_PAREN                     | LINE: 49
TOKEN: INTEGER              | TYPE: TYPE_INTEGER                   | LINE: 49
TOKEN: i                    | TYPE: IDENTIFIER                     | LINE: 49
TOKEN: =                    | TYPE: ASSIGN_OP                      | LINE: 49
TOKEN: 0                    | TYPE: NUM_CONST                      | LINE: 49
TOKEN: ;                    | TYPE: SEMICOLON                      | LINE: 49
TOKEN: i                    | TYPE: IDENTIFIER                     | LINE: 49
TOKEN: <                    | TYPE: REL_LT                         | LINE: 49
TOKEN: 10                   | TYPE: NUM_CONST                      | LINE: 49
TOKEN: ;                    | TYPE: SEMICOLON                      | LINE: 49
TOKEN: i                    | TYPE: IDENTIFIER                     | LINE: 49
TOKEN: ++                   | TYPE: UNARY_INC                      | LINE: 49
TOKEN: )                    | TYPE: RIGHT_PAREN                    | LINE: 49
TOKEN: {                    | TYPE: LEFT_CURLY                     | LINE: 49
TOKEN: FOR                  | TYPE: KW_FOR                         | LINE: 50
TOKEN: (                    | TYPE: LEFT_PAREN                     | LINE: 50
TOKEN: INTEGER              | TYPE: TYPE_INTEGER                   | LINE: 50
TOKEN: j                    | TYPE: IDENTIFIER                     | LINE: 50
TOKEN: =                    | TYPE: ASSIGN_OP                      | LINE: 50
TOKEN: 0                    | TYPE: NUM_CONST                      | LINE: 50
TOKEN: ;                    | TYPE: SEMICOLON                      | LINE: 50
TOKEN: j                    | TYPE: IDENTIFIER                     | LINE: 50
TOKEN: <                    | TYPE: REL_LT                         | LINE: 50
TOKEN: 10                   | TYPE: NUM_CONST                      | LINE: 50
TOKEN: ;                    | TYPE: SEMICOLON                      | LINE: 50
TOKEN: j                    | TYPE: IDENTIFIER                     | LINE: 50
TOKEN: ++                   | TYPE: UNARY_INC                      | LINE: 50
TOKEN: )                    | TYPE: RIGHT_PAREN                    | LINE: 50
TOKEN: {                    | TYPE: LEFT_CURLY                     | LINE: 50
TOKEN: DISPLAY              | TYPE: KW_DISPLAY                     | LINE: 51
TOKEN: (                    | TYPE: LEFT_PAREN                     | LINE: 51
TOKEN: Hello                | TYPE: STR_CONST                      | LINE: 51
TOKEN: )                    | TYPE: RIGHT_PAREN                    | LINE: 51
TOKEN: ;                    | TYPE: SEMICOLON                      | LINE: 51
TOKEN: }                    | TYPE: RIGHT_CURLY                    | LINE: 52
TOKEN: }                    | TYPE: RIGHT_CURLY                    | LINE: 53
TOKEN: WHILE                | TYPE: KW_WHILE                       | LINE: 55
TOKEN: (                    | TYPE: LEFT_PAREN                     | LINE: 55
TOKEN: x                    | TYPE: IDENTIFIER                     | LINE: 55
TOKEN: >                    | TYPE: REL_GT                         | LINE: 55
TOKEN: 10                   | TYPE: NUM_CONST                      | LINE: 55
TOKEN: )                    | TYPE: RIGHT_PAREN                    | LINE: 55
TOKEN: {                    | TYPE: LEFT_CURLY                     | LINE: 55
TOKEN: DISPLAY              | TYPE: KW_DISPLAY                     | LINE: 56
TOKEN: (                    | TYPE: LEFT_PAREN                     | LINE: 56
TOKEN: %d                   | TYPE: STR_WITH_FORMAT                | LINE: 56
TOKEN: ,                    | TYPE: COMMA                          | LINE: 56
TOKEN: 1                    | TYPE: NUM_CONST                      | LINE: 56
TOKEN: +                    | TYPE: ADD_OP                         | LINE: 56
TOKEN: 2                    | TYPE: NUM_CONST                      | LINE: 56
TOKEN: )                    | TYPE: RIGHT_PAREN                    | LINE: 56
TOKEN: ;                    | TYPE: SEMICOLON                      | LINE: 56
TOKEN: }                    | TYPE: RIGHT_CURLY                    | LINE: 57
TOKEN: }                    | TYPE: RIGHT_CURLY                    | LINE: 59
TOKEN: EOF                  | TYPE: EOF                            | LINE: 59
