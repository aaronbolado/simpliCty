TOKEN:  identifiers         | TYPE: COMMENT                        | LINE: 1
TOKEN: intNum               | TYPE: IDENTIFIER                     | LINE: 2
TOKEN: _arr_size            | TYPE: IDENTIFIER                     | LINE: 3
TOKEN:  keywords            | TYPE: COMMENT                        | LINE: 5
TOKEN: BREAK                | TYPE: KW_BREAK                       | LINE: 6
TOKEN: CONTINUE             | TYPE: KW_CONTINUE                    | LINE: 7
TOKEN: DEFAULT              | TYPE: KW_DEFAULT                     | LINE: 8
TOKEN: DISPLAY              | TYPE: KW_DISPLAY                     | LINE: 9
TOKEN: ELSE                 | TYPE: KW_ELSE                        | LINE: 10
TOKEN: FOR                  | TYPE: KW_FOR                         | LINE: 11
TOKEN: IF                   | TYPE: KW_IF                          | LINE: 12
TOKEN: INPUT                | TYPE: KW_INPUT                       | LINE: 13
TOKEN: MAIN                 | TYPE: KW_MAIN                        | LINE: 14
TOKEN: RETURN               | TYPE: KW_RETURN                      | LINE: 15
TOKEN: WHILE                | TYPE: KW_WHILE                       | LINE: 16
TOKEN:  reserved words      | TYPE: COMMENT                        | LINE: 18
TOKEN: BOOLEAN              | TYPE: TYPE_BOOLEAN                   | LINE: 19
TOKEN: CHARACTER            | TYPE: TYPE_CHARACTER                 | LINE: 20
TOKEN: CONSTANT             | TYPE: RW_CONSTANT                    | LINE: 21
TOKEN: FALSE                | TYPE: BOOLEAN                        | LINE: 22
TOKEN: FLOAT                | TYPE: TYPE_FLOAT                     | LINE: 23
TOKEN: INTEGER              | TYPE: TYPE_INTEGER                   | LINE: 24
TOKEN: NULL                 | TYPE: RW_NULL                        | LINE: 25
TOKEN: STRING               | TYPE: TYPE_STRING                    | LINE: 26
TOKEN: TRUE                 | TYPE: BOOLEAN                        | LINE: 27
TOKEN: VOID                 | TYPE: RW_VOID                        | LINE: 28
TOKEN:  noise words         | TYPE: COMMENT                        | LINE: 30
TOKEN: DO                   | TYPE: NW_DO                          | LINE: 31
TOKEN: END                  | TYPE: NW_END                         | LINE: 32
TOKEN: LET                  | TYPE: NW_LET                         | LINE: 33
TOKEN: THEN                 | TYPE: NW_THEN                        | LINE: 34
TOKEN:  constants           | TYPE: COMMENT                        | LINE: 36
TOKEN: 1020                 | TYPE: NUM_CONST                      | LINE: 37
TOKEN: 3.14                 | TYPE: FLOAT_CONST                    | LINE: 38
TOKEN: TRUE                 | TYPE: BOOLEAN                        | LINE: 39
TOKEN: FALSE                | TYPE: BOOLEAN                        | LINE: 40
TOKEN: c                    | TYPE: CHAR_CONST                     | LINE: 41
TOKEN: hello                | TYPE: INVALID                        | LINE: 42
TOKEN: word                 | TYPE: STR_CONST                      | LINE: 43
TOKEN:  operators           | TYPE: COMMENT                        | LINE: 45
TOKEN: arithmetic           | TYPE: IDENTIFIER                     | LINE: 46
TOKEN: +                    | TYPE: ADD_OP                         | LINE: 46
TOKEN: -                    | TYPE: SUB_OP                         | LINE: 46
TOKEN: *                    | TYPE: MUL_OP                         | LINE: 46
TOKEN: /                    | TYPE: DIV_OP                         | LINE: 46
TOKEN: $                    | TYPE: INTDIV_OP                      | LINE: 46
TOKEN: %                    | TYPE: MOD_OP                         | LINE: 46
TOKEN: ^                    | TYPE: EXPO_OP                        | LINE: 46
TOKEN: relational           | TYPE: IDENTIFIER                     | LINE: 47
TOKEN: <                    | TYPE: REL_LT                         | LINE: 47
TOKEN: >                    | TYPE: REL_GT                         | LINE: 47
TOKEN: <=                   | TYPE: REL_LE                         | LINE: 47
TOKEN: >=                   | TYPE: REL_GE                         | LINE: 47
TOKEN: ==                   | TYPE: REL_EQ                         | LINE: 47
TOKEN: !=                   | TYPE: REL_NEQ                        | LINE: 47
TOKEN: logical              | TYPE: IDENTIFIER                     | LINE: 48
TOKEN: &&                   | TYPE: LOG_AND                        | LINE: 48
TOKEN: ||                   | TYPE: LOG_OR                         | LINE: 48
TOKEN: !                    | TYPE: LOG_NOT                        | LINE: 48
TOKEN: unary                | TYPE: IDENTIFIER                     | LINE: 49
TOKEN: --                   | TYPE: UNARY_DEC                      | LINE: 49
TOKEN: ++                   | TYPE: UNARY_INC                      | LINE: 49
TOKEN: assignment           | TYPE: IDENTIFIER                     | LINE: 50
TOKEN: =                    | TYPE: ASSIGN_OP                      | LINE: 50
TOKEN: +=                   | TYPE: ADD_ASSIGN                     | LINE: 50
TOKEN: -=                   | TYPE: SUB_ASSIGN                     | LINE: 50
TOKEN: *=                   | TYPE: MUL_ASSIGN                     | LINE: 50
TOKEN: /=                   | TYPE: DIV_ASSIGN                     | LINE: 50
TOKEN: $=                   | TYPE: INTDIV_ASSIGN                  | LINE: 50
TOKEN: %=                   | TYPE: MOD_ASSIGN                     | LINE: 50
TOKEN:  delimiters          | TYPE: COMMENT                        | LINE: 52
TOKEN: ,                    | TYPE: COMMA                          | LINE: 53
TOKEN: ;                    | TYPE: SEMICOLON                      | LINE: 53
TOKEN:  brackets            | TYPE: COMMENT                        | LINE: 55
TOKEN: (                    | TYPE: LEFT_PAREN                     | LINE: 56
TOKEN: )                    | TYPE: RIGHT_PAREN                    | LINE: 56
TOKEN: {                    | TYPE: LEFT_CURLY                     | LINE: 56
TOKEN: }                    | TYPE: RIGHT_CURLY                    | LINE: 56
TOKEN: [                    | TYPE: LEFT_BRACKET                   | LINE: 56
TOKEN: ]                    | TYPE: RIGHT_BRACKET                  | LINE: 56
TOKEN: sample               | TYPE: IDENTIFIER                     | LINE: 58
TOKEN:  comments            | TYPE: COMMENT                        | LINE: 58
TOKEN:  This is a multi-line comment. It spans multiple lines and contains special characters like @#$%^&*().  | TYPE: COMMENT                        | LINE: 59
TOKEN:  invalids            | TYPE: COMMENT                        | LINE: 64
TOKEN: 143iloveu            | TYPE: INVALID                        | LINE: 65
TOKEN: set``loop            | TYPE: INVALID                        | LINE: 66
TOKEN: try?                 | TYPE: INVALID                        | LINE: 67
TOKEN: d                    | TYPE: IDENTIFIER                     | LINE: 68
TOKEN: ++                   | TYPE: UNARY_INC                      | LINE: 68
TOKEN: +                    | TYPE: ADD_OP                         | LINE: 68
TOKEN: a                    | TYPE: IDENTIFIER                     | LINE: 68
TOKEN:  can't be hanlded properly. | TYPE: COMMENT                        | LINE: 68
TOKEN: d                    | TYPE: IDENTIFIER                     | LINE: 69
TOKEN: +                    | TYPE: ADD_OP                         | LINE: 69
TOKEN: ++                   | TYPE: UNARY_INC                      | LINE: 69
TOKEN: a                    | TYPE: IDENTIFIER                     | LINE: 69
TOKEN:  can be handled      | TYPE: COMMENT                        | LINE: 69
TOKEN: d                    | TYPE: IDENTIFIER                     | LINE: 70
TOKEN: ++                   | TYPE: UNARY_INC                      | LINE: 70
TOKEN: a                    | TYPE: IDENTIFIER                     | LINE: 70
TOKEN: aaron
john           | TYPE: STR_CONST                      | LINE: 72
TOKEN: a%                   | TYPE: STR_CONST                      | LINE: 73
TOKEN: %a                   | TYPE: STR_CONST                      | LINE: 74
TOKEN:  format specifiers   | TYPE: COMMENT                        | LINE: 76
TOKEN: break%d              | TYPE: STR_WITH_FORMAT                | LINE: 77
TOKEN: %d                   | TYPE: STR_WITH_FORMAT                | LINE: 78
